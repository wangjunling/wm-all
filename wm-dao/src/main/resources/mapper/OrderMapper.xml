<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="site.wmblog.mapper.OrderMapper">
    <resultMap id="BaseResultMap" type="com.yellowstone.entity.Order">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="buyer_id" jdbcType="BIGINT" property="buyerId"/>
        <result column="state" jdbcType="VARCHAR" property="state"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>

    <resultMap id="orderDtoMap" type="com.yellowstone.dto.order.OrderDto">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="buyer_id" jdbcType="BIGINT" property="buyerId"/>
        <result column="state" jdbcType="VARCHAR" property="state"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="name" jdbcType="VARCHAR" property="name"/>

    </resultMap>

    <sql id="Base_Column_List">
        id, buyer_id, state, remark, update_time, create_time
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_order
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from t_order
        where id = #{id,jdbcType=VARCHAR}
    </delete>

    <insert id="insert" parameterType="com.yellowstone.entity.Order">
        insert into t_order (id, buyer_id, state,
        remark, update_time, create_time
        )
        values (#{id,jdbcType=VARCHAR}, #{buyerId,jdbcType=BIGINT}, #{state,jdbcType=VARCHAR},
        #{remark,jdbcType=VARCHAR}, now(), now()
        )
    </insert>

    <insert id="insertSelective" parameterType="com.yellowstone.entity.Order">
        insert into t_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="buyerId != null">
                buyer_id,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="buyerId != null">
                #{buyerId,jdbcType=BIGINT},
            </if>
            <if test="state != null">
                #{state,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.yellowstone.entity.Order">
        update t_order
        <set>
            <if test="buyerId != null">
                buyer_id = #{buyerId,jdbcType=BIGINT},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=VARCHAR},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = now,
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.yellowstone.entity.Order">
        update t_order
        set buyer_id = #{buyerId,jdbcType=BIGINT},
        state = #{state,jdbcType=VARCHAR},
        remark = #{remark,jdbcType=VARCHAR},
        update_time = now()
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <select id="listOrder" parameterType="site.wmblog.mapper.query.order.OrderQuery" resultMap="orderDtoMap">
        <include refid="Page.header"/>
        select
        o.id, o.buyer_id, o.state, o.remark, o.update_time, o.create_time, a.name
        from t_order o left join t_order_address a
        on o.id = a.order_id
        <where>
            <if test="buyerId != null">
                o.buyer_id=#{buyerId,jdbcType=BIGINT}
            </if>
            <if test="id != null">
                and o.id = #{id,jdbcType=VARCHAR}
            </if>
            <if test="state != null and state != ''">
                and o.state = #{state, jdbcType=VARCHAR}
            </if>
            <if test="timeStart != null">
                <![CDATA[ and o.create_time > #{timeStart, jdbcType=TIMESTAMP} ]]>
            </if>
            <if test="timeEnd != null">
                <![CDATA[ and o.create_time <= #{timeEnd, jdbcType=TIMESTAMP} ]]>
            </if>
        </where>

        <choose>
            <when test="sort.property == null">
                order by o.update_time desc
            </when>
            <when test='sort.property == "id"'>
                order by o.id ${sort.direction}
            </when>
            <when test='sort.property == "createTime"'>
                order by o.create_time ${sort.direction}
            </when>
            <when test='sort.property == "state"'>
                order by o.state ${sort.direction}, o.update_time desc
            </when>
            <otherwise>
                order by o.update_time desc
            </otherwise>
        </choose>

        <include refid="Page.footer"/>
    </select>
    <select id="countOrder" parameterType="site.wmblog.mapper.query.order.OrderQuery" resultType="long">
        select
        count(*)
        from t_order
        <where>
            <if test="buyerId != null">
                buyer_id = #{buyerId,jdbcType=BIGINT}
            </if>
            <if test="id != null">
                and id = #{id,jdbcType=VARCHAR}
            </if>
            <if test="state != null">
                and state = #{state, jdbcType=VARCHAR}
            </if>
            <if test="timeStart != null">
                <![CDATA[ and create_time > #{timeStart, jdbcType=TIMESTAMP} ]]>
            </if>
            <if test="timeEnd != null">
                <![CDATA[ and create_time <= #{timeEnd, jdbcType=TIMESTAMP} ]]>
            </if>

        </where>
    </select>

    <select id="selectByOrderId" parameterType="site.wmblog.mapper.query.order.OrderQuery" resultMap="orderDtoMap">
        select
        <include refid="Base_Column_List"/>
        from t_order
        where id = #{id,jdbcType=VARCHAR}
        <if test="buyerId != null" >
            and buyer_id = #{buyerId,jdbcType=BIGINT}

        </if>
    </select>

    <update id="updateOrderState" parameterType="com.yellowstone.dto.order.OrderStateUpdateParam">
        update t_order
          set state =  #{state,jdbcType=VARCHAR}
        where id = #{orderId,jdbcType=VARCHAR}
        <if test="allowState != null">
            and state in
            <foreach collection="allowState" open="(" close=")" item="st" separator=",">
                #{st, jdbcType=VARCHAR}
            </foreach>
        </if>
    </update>
</mapper>
