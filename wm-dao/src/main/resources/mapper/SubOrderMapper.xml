<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="site.wmblog.mapper.SubOrderMapper">

    <resultMap id="BaseResultMap" type="com.yellowstone.entity.SubOrder">
        <id column="id" jdbcType="VARCHAR" property="id"/>
        <result column="order_id" jdbcType="VARCHAR" property="orderId"/>
        <result column="product_id" jdbcType="BIGINT" property="productId"/>
        <result column="quantity" jdbcType="INTEGER" property="quantity"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="state" jdbcType="VARCHAR" property="state"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
    </resultMap>

    <resultMap id="detailMap" type="com.yellowstone.dto.order.SubOrderDto" extends="BaseResultMap">
        <result column="name" jdbcType="VARCHAR" property="name"/>
        <result column="main_image_url" jdbcType="VARCHAR" property="mainImageUrl"/>
        <result column="num" jdbcType="VARCHAR" property="num"/>
        <result column="dealer_price" jdbcType="DOUBLE" property="dealerPrice"/>
        <result column="parent_order_state" jdbcType="VARCHAR" property="parentOrderState"/>
    </resultMap>


    <sql id="Base_Column_List">
        <!-- WARNING - @mbggenerated This element is automatically generated by
            MyBatis Generator, do not modify. This element was generated on Fri Jul 03
            16:03:45 CST 2015. -->
        id, order_id, product_id, quantity, remark, state, update_time,
        create_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.String"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_sub_order
        where id = #{id,jdbcType=VARCHAR}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        <!-- WARNING - @mbggenerated This element is automatically generated by
            MyBatis Generator, do not modify. This element was generated on Fri Jul 03
            16:03:45 CST 2015. -->
        delete from t_sub_order
        where id = #{id,jdbcType=VARCHAR}
    </delete>
    <insert id="insert" parameterType="com.yellowstone.entity.SubOrder">
		insert into t_sub_order (id,
		order_id, product_id,
		quantity, remark,
		state,
		update_time, create_time)
		values (#{id,jdbcType=VARCHAR},
		#{orderId,jdbcType=VARCHAR},
		#{productId,jdbcType=BIGINT},
		#{quantity,jdbcType=INTEGER},
		#{remark,jdbcType=VARCHAR},
		#{state,jdbcType=VARCHAR},
		now(),
		now())
	</insert>
    <insert id="insertSelective" parameterType="com.yellowstone.entity.SubOrder">
        insert into t_sub_order
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="orderId != null">
                order_id,
            </if>
            <if test="productId != null">
                product_id,
            </if>
            <if test="quantity != null">
                quantity,
            </if>
            <if test="remark != null">
                remark,
            </if>
            <if test="state != null">
                state,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="orderId != null">
                #{orderId,jdbcType=VARCHAR},
            </if>
            <if test="productId != null">
                #{productId,jdbcType=BIGINT},
            </if>
            <if test="quantity != null">
                #{quantity,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                #{remark,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                #{state,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.yellowstone.entity.SubOrder">
        <!-- WARNING - @mbggenerated This element is automatically generated by
            MyBatis Generator, do not modify. This element was generated on Fri Jul 03
            16:03:45 CST 2015. -->
        update t_sub_order
        <set>
            <if test="orderId != null">
                order_id = #{orderId,jdbcType=VARCHAR},
            </if>
            <if test="productId != null">
                product_id = #{productId,jdbcType=BIGINT},
            </if>
            <if test="quantity != null">
                quantity = #{quantity,jdbcType=INTEGER},
            </if>
            <if test="remark != null">
                remark = #{remark,jdbcType=VARCHAR},
            </if>
            <if test="state != null">
                state = #{state,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where id = #{id,jdbcType=VARCHAR}
    </update>

    <update id="updateByPrimaryKey" parameterType="com.yellowstone.entity.SubOrder">
		update t_sub_order
		set order_id = #{orderId,jdbcType=VARCHAR},
		product_id =
		#{productId,jdbcType=BIGINT},
		quantity =
		#{quantity,jdbcType=INTEGER},
		remark = #{remark,jdbcType=VARCHAR},
		state = #{state,jdbcType=VARCHAR},
		update_time =
		#{updateTime,jdbcType=TIMESTAMP},
		create_time =
		#{createTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=VARCHAR}
	</update>

    <select id="findSaleQuantity" resultType="int" parameterType="java.lang.Long">
		select sum(quantity) from t_sub_order tso
		left join
		t_order tt on
		tt.id=tso.order_id
		where
		product_id=#{productId} and
		tt.state='complete'
	</select>
    <select id="findSaleTime" resultType="int" parameterType="java.lang.Long">
		select
		count(*) from t_sub_order tso
		left join t_order tt on
		tt.id=tso.order_id
		where product_id=#{productId} and
		tt.state='complete'
	</select>
    <select id="selectSaleRecordByPage" parameterType="map"
            resultType="com.yellowstone.dto.SaleRecord">
        <include refid="Page.header"/>
        select tb.account, tso.quantity,tt.update_time as
        finishTime
        from
        t_sub_order
        tso
        left join t_order tt on
        tso.order_id=tt.id left
        join
        t_buyer tb ON
        tt.buyer_id=tb.id
        where
        tso.product_id=#{productId} and
        tt.state =
        'complete'
        order by
        tt.update_time
        <include refid="Page.footer"/>
    </select>


    <select id="selectByOrderId" parameterType="string" resultMap="detailMap">
		select
		o.id, o.order_id, o.product_id, o.quantity, o.remark, o.state, o.update_time,
        o.create_time, p.name, p.main_image_url,p.num,tmp.dealer_price
		    from
		t_sub_order o
		   left join
		t_product p
		   on o.product_id = p.id
           left join
        (SELECT sub_order_id,dealer_price,max(create_time) FROM t_quote_price_record group by sub_order_id) tmp
        on o.id = tmp.sub_order_id
		where o.order_id = #{orderId,jdbcType=VARCHAR}

	</select>

    <select id="listByOrderId"  resultMap="detailMap">
        select s.id, s.order_id, s.product_id, s.state, s.quantity,
        (select dealer_price from t_quote_price_record where sub_order_id = s.id order by id desc limit 1) as dealer_price
        from t_sub_order s
        where s.order_id in
        <foreach collection="list" open="(" close=")" item="orderId" separator=",">
            #{orderId, jdbcType=VARCHAR}
        </foreach>
    </select>

    <select id="selectByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_sub_order
        where order_id in (SELECT id FROM t_order where buyer_id = #{userId,jdbcType=BIGINT});
    </select>

    <select id="selectBySubOrderId" parameterType="java.lang.String"
            resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_sub_order
        where id = #{id,jdbcType=VARCHAR}
    </select>

    <update id="updateSubOrderState">
        update t_sub_order
        set state = #{state,jdbcType=VARCHAR}
        where id = #{subOrderId,jdbcType=VARCHAR}
    </update>


    <select id="selectSubOrderList"  resultMap="detailMap" parameterType="site.wmblog.mapper.query.flow.SubOrderQuery">
        select s.id, s.order_id, s.product_id, s.state, s.quantity,s.create_time,o.state as parent_order_state,
        (select dealer_price from t_quote_price_record where sub_order_id = s.id order by id desc limit 1) as dealer_price
        from t_sub_order s
        left join
        t_order o
        on
        s.order_id = o.id
        <where>
            <if test="id != null">
                s.id like CONCAT('%',#{id},'%')
            </if>
        </where>
        <choose>
            <when test='sort.property == "id"'>
                order by s.id ${sort.direction}
            </when>
            <when test='sort.property == "createTime"'>
                order by s.create_time ${sort.direction}
            </when>
            <when test='sort.property == "state"'>
                order by s.state ${sort.direction}, o.update_time desc
            </when>
            <otherwise>
                order by s.update_time desc
            </otherwise>
        </choose>

        <include refid="Page.footer"/>
    </select>

    <select id="countSubOrder" parameterType="site.wmblog.mapper.query.flow.SubOrderQuery" resultType="long">
        select count(1)
        from (
        select s.id, s.order_id, s.product_id, s.state, s.quantity,o.state as parent_order_state,
        (select dealer_price from t_quote_price_record where sub_order_id = s.id order by id desc limit 1) as
        dealer_price
        from t_sub_order s
        left join
        t_order o
        on
        s.order_id = o.id
        <where>
            <if test="id != null">
                s.id like CONCAT('%',#{id},'%')
            </if>
        </where>
        ) tmp
    </select>
</mapper>
